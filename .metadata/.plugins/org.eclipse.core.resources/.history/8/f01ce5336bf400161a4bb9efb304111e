package NetNinny;

import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.Socket;
import java.nio.charset.StandardCharsets;

public class ProxyThread extends Thread{
	

	final private static int RQ_BUFFER = 1024;
	final private static int RP_BUFFER = 4096;
	
	private boolean debug;

	private byte[] request;
	private byte[] response;
	
	private int reqBytes;
	private int respBytes;

	//Client
	private Socket sClient;

	private InputStream fromClient;
	private OutputStream toClient;

	//Server 
	private final int SERVER_PORT = 80;

	private Socket sServer;
	
	private InputStream fromServer;
	private OutputStream toServer;



	public ProxyThread(Socket sClient, boolean debug){
		
		request = new byte[RQ_BUFFER];
		response = new byte[RP_BUFFER];

		this.sClient = sClient;
		this.debug = debug;
		

		try{
			this.fromClient = sClient.getInputStream();
			this.toClient = sClient.getOutputStream();
		}catch(IOException e){
			System.out.println("[-] ("+this.getName()+") Error connecting to client");
		}
		

		this.start();
	}


	@Override
	public void run(){
		System.out.println("[+] ("+this.getName()+") New connection from "+sClient.getRemoteSocketAddress());
		
		try{
			while ((reqBytes = fromClient.read(request)) != -1){
				sRequest = new String(request, StandardCharsets.UTF_8);
				System.out.println("[+] ("+this.getName()+") Got request from client (size: "+reqBytes+")");
				if (debug){
					System.out.println("[+] ("+this.getName()+") REQUEST:");
					System.out.println(sRequest);
					System.out.println("[+] ("+this.getName()+") END REQUEST");
				}
				break;
			}
			
			if (sRequest == null) return false;
			
			getServerHost(sRequest);
			
			if(!checkURL(sRequest)){
				System.out.println("[+] Bad URL detected!");
				redirectToURLError(sRequest);
			}
			
			getServerConn(sRequest);
			
			return true;
			
		}catch(IOException e){
			e.printStackTrace();
		}
		
		System.out.println("[+] ("+this.getName()+") Exiting...");
		return;
	}

}
